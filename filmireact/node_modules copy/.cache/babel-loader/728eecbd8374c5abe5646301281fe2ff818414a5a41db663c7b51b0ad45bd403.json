{"ast":null,"code":"// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// import { useSelector } from 'react-redux';\n\n// import { Link } from \"react-router-dom\";\n// import Navbar from \"../Navbar/Navbar\";\n// import Card from \"./Card\";\n// import checkAuth from \"../Authenticate/CheckAuth\";\n\n// function ListPosts() {\n//   var user = useSelector(store => store.auth.user);\n//   var [posts, setPosts] = useState([]);\n\n//   const [filteredPosts, setFilteredPosts] = useState([]); \n//   const [SearchTerm, setSearchTerm] = useState(\"\");\n\n//   const handleSearchInputChange = (event) => {\n//     event.preventDefault();\n//     setSearchTerm(event.target.value);\n//   };\n\n//   const handleSearch = (event) => {\n//     event.preventDefault();\n//     if (SearchTerm.trim() === \"\") {\n//       setFilteredPosts(posts);\n//     }\n//     else {\n//       var filteredItems = posts.filter((item) =>\n//         item.title.toLowerCase().includes(SearchTerm.toLowerCase())\n//       );\n//       setFilteredPosts(filteredItems);\n//     }\n//   };\n\n//   function fetchPosts() {\n//     if (user && user.token) {\n//       axios\n//         .get('https://medicalstore.mashupstack.com/api/medicine', {\n//           headers: { 'Authorization': \"bearer \" + user.token }\n//         })\n//         .then(response => {\n//           setPosts(response.data);\n//           setFilteredPosts(response.data);\n//         })\n//         .catch(error => {\n//           console.error('Error fetching posts:', error);\n//         });\n//     } else {\n//       console.error('User or user token is null');\n//     }\n//   }\n\n//   useEffect(() => {\n//     fetchPosts();\n//   }, [user]);\n\n//   return (\n//     <div className=\"customBg\">\n//       <Navbar />\n//       <div className=\"container w-50 bg-white rounded mt-5 p-3\">\n//         <div className=\"row\">\n//           <div className=\"col-12\">\n//             <h1 className=\"text-center my-4\" style={{ fontWeight: 'bold', color: '#531251' }}>Medicine List</h1>\n//           </div>\n//         </div>\n//         <div className=\"row\">\n//           <div className=\"col-8 offset-2\">\n//             <Link to=\"/createAPI\" className=\"btn customBtnClrAlt mb-2\">Add Medicine</Link>\n\n//             <form>\n//               <label>Search Blog: </label>\n//               <input type=\"text\" value={SearchTerm} onChange={handleSearchInputChange} />{\" \"} &nbsp;\n//               <button className=\"btn btn-small customBtnClrAlt\" type=\"button\" onClick={handleSearch}> Search </button> &nbsp;\n//             </form>\n\n//             {filteredPosts.length === 0 ? (\n//               <p>No matching posts found.</p>\n//             ) : (\n//               filteredPosts.map((post) => (\n//                 <Card key={post.id} post={post} refresh={fetchPosts} />\n//               ))\n//             )}\n\n//             {posts.map(post => <Card key={post.id} post={post} refresh={fetchPosts} />)}\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default ListPosts;","map":{"version":3,"names":[],"sources":["C:/ReactJS/ReactTest/reacttest/src/components/CRUD/Read.js"],"sourcesContent":["// import axios from \"axios\";\r\n// import { useEffect, useState } from \"react\";\r\n// import { useSelector } from 'react-redux';\r\n\r\n// import { Link } from \"react-router-dom\";\r\n// import Navbar from \"../Navbar/Navbar\";\r\n// import Card from \"./Card\";\r\n// import checkAuth from \"../Authenticate/CheckAuth\";\r\n\r\n// function ListPosts() {\r\n//   var user = useSelector(store => store.auth.user);\r\n//   var [posts, setPosts] = useState([]);\r\n\r\n//   const [filteredPosts, setFilteredPosts] = useState([]); \r\n//   const [SearchTerm, setSearchTerm] = useState(\"\");\r\n\r\n//   const handleSearchInputChange = (event) => {\r\n//     event.preventDefault();\r\n//     setSearchTerm(event.target.value);\r\n//   };\r\n\r\n//   const handleSearch = (event) => {\r\n//     event.preventDefault();\r\n//     if (SearchTerm.trim() === \"\") {\r\n//       setFilteredPosts(posts);\r\n//     }\r\n//     else {\r\n//       var filteredItems = posts.filter((item) =>\r\n//         item.title.toLowerCase().includes(SearchTerm.toLowerCase())\r\n//       );\r\n//       setFilteredPosts(filteredItems);\r\n//     }\r\n//   };\r\n\r\n\r\n//   function fetchPosts() {\r\n//     if (user && user.token) {\r\n//       axios\r\n//         .get('https://medicalstore.mashupstack.com/api/medicine', {\r\n//           headers: { 'Authorization': \"bearer \" + user.token }\r\n//         })\r\n//         .then(response => {\r\n//           setPosts(response.data);\r\n//           setFilteredPosts(response.data);\r\n//         })\r\n//         .catch(error => {\r\n//           console.error('Error fetching posts:', error);\r\n//         });\r\n//     } else {\r\n//       console.error('User or user token is null');\r\n//     }\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     fetchPosts();\r\n//   }, [user]);\r\n\r\n//   return (\r\n//     <div className=\"customBg\">\r\n//       <Navbar />\r\n//       <div className=\"container w-50 bg-white rounded mt-5 p-3\">\r\n//         <div className=\"row\">\r\n//           <div className=\"col-12\">\r\n//             <h1 className=\"text-center my-4\" style={{ fontWeight: 'bold', color: '#531251' }}>Medicine List</h1>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"row\">\r\n//           <div className=\"col-8 offset-2\">\r\n//             <Link to=\"/createAPI\" className=\"btn customBtnClrAlt mb-2\">Add Medicine</Link>\r\n\r\n//             <form>\r\n//               <label>Search Blog: </label>\r\n//               <input type=\"text\" value={SearchTerm} onChange={handleSearchInputChange} />{\" \"} &nbsp;\r\n//               <button className=\"btn btn-small customBtnClrAlt\" type=\"button\" onClick={handleSearch}> Search </button> &nbsp;\r\n//             </form>\r\n\r\n//             {filteredPosts.length === 0 ? (\r\n//               <p>No matching posts found.</p>\r\n//             ) : (\r\n//               filteredPosts.map((post) => (\r\n//                 <Card key={post.id} post={post} refresh={fetchPosts} />\r\n//               ))\r\n//             )}\r\n\r\n//             {posts.map(post => <Card key={post.id} post={post} refresh={fetchPosts} />)}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ListPosts;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}